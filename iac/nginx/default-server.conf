# File path: /etc/nginx/sites-available/default
# For Connection Pooling: Eliminates TCP handshake overhead for each request and Can improve performance by 20-50% for high traffic sites
# upstream node_upstream {
#     server localhost:3000;
#     # For multiple backend servers
#     # server 192.168.1.100:3000; Add s
#     # server 192.168.1.101:3000;
#     keepalive 64; ## maintains up to 64 persistent connections to your Node.js server
# }

server {
	listen 80 ;
	listen [::]:80;
  server_name crypto.kawaraa.com;
  
  # Note: Unccomment this only if SSL is enabled.
  # Reroute the connection to HTTPS server
  if ($host = "crypto.kawaraa.com") {
      return 301 https://$host$request_uri;
  }
  # Note: Unccomment this only if SSL is enabled. This is useful when testing the server via IP address
  # Block direct IP access to Nginx web server (once it's connected to the domain)
  return 444; #CONNECTION CLOSED WITHOUT RESPONSE

  ## Only for testing HTTP: Uncomment the following ##
  # location / {
  #   proxy_pass http://localhost:3000;
  #   proxy_http_version 1.1;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection 'upgrade';
  #   proxy_set_header Host $host;
  #   proxy_cache_bypass $http_upgrade;
  # }
}


# Note: to enable SSL unccomment the following lines.
server {
  listen 443 ssl default_server;
  listen [::]:443 ssl;
  server_name crypto.kawaraa.com;

  # The followng configuration for cloudflare certificate
  ssl_certificate /etc/ssl/cloudflare/cloudflare.crt;
  ssl_certificate_key /etc/ssl/cloudflare/cloudflare.key;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  root /var/www/html;
	index index.html index.htm index.nginx-debian.html;

	location / {
    # proxy_pass http://node_upstream;
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Important WebSocket-specific settings:
    # proxy_set_header Upgrade $http_upgrade; ## for WebSocket connections
    # proxy_set_header Connection 'upgrade'; ## for WebSocket connections
    # proxy_cache_bypass $http_upgrade; ## for WebSocket connections

    # Important (Server-Sent Events) SSE-specific settings:
    proxy_set_header Connection ''; ## for HTTP/1.1 keep-alive or SSE connections
    proxy_cache off;
    chunked_transfer_encoding off;
    proxy_read_timeout 1h;  # Adjust as needed
	}
}
